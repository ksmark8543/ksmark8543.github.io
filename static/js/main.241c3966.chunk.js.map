{"version":3,"sources":["components/hook/useInterval.js","components/util/comUtil.js","components/store/index.js","components/coinPrice/BitcoinPrice.js","components/coinPrice/ReadMe.js","components/lib/commonApi.js","components/coinPrice/index.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","getRate","closing_price","opening_price","__closing_price","parseFloat","__opening_price","toFixed","getRandomInt","max","Math","floor","random","getCookie","coin","localStorage","getItem","setCookie","name","value","setItem","EXCHANGE_NAME","BITHUMB","COIN_NAME","COOKIE_NAME","COIN","COLOR","PLUS","MINUS","IMPORTANT","StyledText","styled","div","p","color","BitcoinPrice","useState","data","setData","search","a","axios","get","Date","getTime","res","newData","rate","ComUtil","prev","store","toLocaleString","style","fontSize","Content","ReadMe","getBithumbSise","cache","status","coinList","siseObj","Object","keys","map","coinName","push","getCoinList","importantCoinNameList","theme","borderColor","Wrapper","display","ButtonGroup","SecretButton","OpacityContainer","opacity","Container","StyledSelect","select","StyledOption","option","important","Button","SpeechWrap","CoinPrice","setCoinList","setCoin","text","setText","currencyRef","readmeOpen","setReadmeOpen","speaker","setSpeaker","speakerInterval","setSpeakerInterval","checked","setChecked","newCoinList","newCoin","cookie","comUtil","fetch","checkAndSettingText","commonApi","console","log","newText","_coin","document","getElementsByClassName","click","setOpacity","onOpacityChange","newOpacity","setDisplay","position","top","left","bottom","right","background","zIndex","onDoubleClick","e","stopPropagation","className","onChange","target","item","isImportant","includes","marginLeft","acc_trade_value_24H","round","onClick","newSpeaker","toast","size","height","type","newChecked","disabled","bind","this","marginTop","textAlign","fontWeight","alignItems","justifyContent","marginRight","href","cursor","displayText","stop","pause","resume","lang","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.241c3966.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      const tick = () => {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n  export default useInterval","//등락 퍼센트\r\nexport const getRate = (closing_price, opening_price) => {\r\n    const __closing_price  = parseFloat(closing_price)\r\n    const __opening_price = parseFloat(opening_price)        \r\n    const __now_price = __closing_price - __opening_price\r\n    const __rate = (__now_price / __opening_price) * 100\r\n    return parseFloat(__rate.toFixed(2));\r\n}\r\n\r\nexport function getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function getCookie() {\r\n  return  {\r\n    coin: localStorage.getItem(\"coin\")\r\n  }  \r\n}\r\n\r\nexport function setCookie(name, value) {\r\n  localStorage.setItem(name, value)\r\n}\r\n\r\n\r\nexport default {\r\n    getRate,\r\n    getRandomInt,\r\n    getCookie,\r\n    setCookie\r\n}","//코인 한글명\r\nexport const COIN_NAME = {\r\n    \"BTC\": 'BTC 비트코인',\r\n    \"ETH\": 'ETH 이더리움',\r\n    \"LTC\": 'LTC 라이트코인',\r\n    \"ETC\": 'ETC 이더리움클래식',\r\n    \"XRP\": 'XRP 리플',\r\n    \"BCH\": 'BCH 비트코인캐시',\r\n    \"QTUM\": 'QTUM 퀀텀',\r\n    \"BTG\": 'BTG 비트코인골드',\r\n     \"EOS\": 'EOS 이오스',\r\n    \"ICX\": 'ICX 아이콘',\r\n    \"TRX\": 'TRX 트론',\r\n    \"ELF\": 'ELF 엘프',\r\n    \"OMG\": 'OMG 오미세고',\r\n    \"KNC\": 'KNC 카이버네트워크',\r\n    \"GLM\": 'GLM 골렘',\r\n    \"ZIL\": 'ZIL 질리카',\r\n    \"WAXP\": 'WAXP 왁스',\r\n    \"POWR\": 'POWR 파워렛저',\r\n    \"LRC\": 'LRC 루프링',\r\n    \"STEEM\": 'STEEM 스팀',\r\n    \"STRAX\": 'STRAX 스트라티스',\r\n    \"ZRX\": 'ZRX 제로엑스',\r\n    \"REP\": 'REP 어거',\r\n    \"XEM\": 'XEM 넴',\r\n    \"SNT\": 'SNT 스테이터스네트워크토큰',\r\n    \"ADA\": 'ADA 에이다',\r\n    \"CTXC\": 'CTXC 코르텍스',\r\n    \"BAT\": 'BAT 베이직어텐션토큰',\r\n    \"WTC\": 'WTC 월튼체인',\r\n    \"THETA\": 'THETA 쎄타토큰',\r\n    \"LOOM\": 'LOOM 룸네트워크',\r\n    \"WAVES\": 'WAVES 웨이브',\r\n    \"TRUE\": 'TRUE 트루체인',\r\n    \"LINK\": 'LINK 체인링크',\r\n    \"ENJ\": 'ENJ 엔진코인',\r\n    \"VET\": 'VET 비체인',\r\n    \"MTL\": 'MTL 메탈',\r\n    \"IOST\": 'IOST 이오스트',\r\n    \"TMTG\": 'TMTG',\r\n    \"QKC\": 'QKC',\r\n    \"HDAC\": 'HDAC 더마이다스터치골드',\r\n    \"AMO\": 'AMO 아모코인',\r\n    \"BSV\": 'BSV 비트코인에스브이',\r\n    \"ORBS\": 'ORBS 오브스',\r\n    \"TFUEL\": 'TFUEL 쎄타퓨엘',\r\n    \"VALOR\": 'VALOR 밸러토큰',\r\n    \"CON\": \"CON 코넌\",\r\n    \"ANKR\": \"ANKR 앵커\",\r\n    \"MIX\": \"MIX 믹스마블\",\r\n    \"CRO\": \"CRO 크립토닷컴체인\",\r\n    \"FX\": \"FX 펑션엑스\",\r\n    \"CHR\": \"CHR 크로미아\",\r\n    \"MBL\": \"MBL 무비블록\",\r\n    \"MXC\": \"MXC 머신익스체인지코인\",\r\n    \"FCT\": \"FCT 피르마체인\",\r\n    \"TRV\": \"TRV 프러스트버스\",\r\n    \"DAD\": \"DAD 다드\",\r\n    \"WOM\": \"WOM 왐토큰\",\r\n    \"SOC\": \"SOC 소다코인\",\r\n    // \"EM\": \"EM\",\r\n    // \"BOA\": \"BOA\",\r\n    // \"FLETA\": \"FLETA\",\r\n    // \"SXP\": \"SXP\",\r\n    // \"COS\": \"COS\",\r\n    // \"APIX\": \"APIX\",\r\n    // \"EL\": \"EL\",\r\n    // \"BASIC\": \"BASIC\",\r\n    // \"HIVE\": \"HIVE\",\r\n    // \"XPR\": \"XPR\",\r\n    // \"VRA\": \"VRA\",\r\n    // \"FIT\": \"FIT\",\r\n    // \"EGG\": \"EGG\",\r\n    // \"BORA\": \"BORA\",\r\n    // \"ARPA\": \"ARPA\",\r\n    // \"APM\": \"APM\",\r\n    // \"CKB\": \"CKB\",\r\n    // \"AERGO\": \"AERGO\",\r\n    // \"ANW\": \"ANW\",\r\n    // \"CENNZ\": \"CENNZ\",\r\n    // \"EVZ\": \"EVZ\",\r\n    // \"CYCLUB\": \"CYCLUB\",\r\n    // \"SRM\": \"SRM\",\r\n    // \"QTCON\": \"QTCON\",\r\n    // \"UNI\": \"UNI\",\r\n    // \"YFI\": \"YFI\",\r\n    // \"UMA\": \"UMA\",\r\n    // \"AAVE\": \"AAVE\",\r\n    // \"COMP\": \"COMP\",\r\n    // \"REN\": \"REN\",\r\n    // \"BAL\": \"BAL\",\r\n    \"RSR\": \"RSR 리저브라이트\",\r\n    // \"NMR\": \"NMR\",\r\n    // \"RLC\": \"RLC\",\r\n    // \"UOS\": \"UOS\",\r\n    // \"SAND\": \"SAND\",\r\n    // \"GOM2\": \"GOM2\",\r\n    // \"RINGX\": \"RINGX\",\r\n    // \"BEL\": \"BEL\",\r\n    // \"OBSR\": \"OBSR\",\r\n    // \"ORC\": \"ORC\",\r\n    // \"POLA\": \"POLA\",\r\n    // \"AWO\": \"AWO\",\r\n    // \"ADP\": \"ADP\",\r\n    // \"DVI\": \"DVI\",\r\n    // \"GHX\": \"\",\r\n    // \"MIR\": \"\",\r\n    // \"MVC\": \"\",\r\n    \"BLY\": \"BLY 블로서리\",\r\n    // \"WOZX\": \"\",\r\n    // \"ANV\": \"\",\r\n    // \"GRT\": \"\",\r\n    // \"MM\": \"\",\r\n    // \"BIOT\": \"\",\r\n    // \"XNO\": \"\",\r\n    // \"SNX\": \"\",\r\n    // \"RAI\": \"\",\r\n    // \"COLA\": \"\",\r\n    // \"NU\": \"\",\r\n    // \"OXT\": \"\",\r\n    // \"LINA\": \"\",\r\n    // \"MAP\": \"\",\r\n    // \"AQT\": \"\",\r\n    // \"WIKEN\": \"\",\r\n    // \"CTSI\": \"\",\r\n    \"MANA\": \"MANA 마나\",\r\n    // \"LPT\": \"\",\r\n    // \"MKR\": \"\",\r\n    // \"SUSHI\": \"\",\r\n    // \"ASM\": \"\",\r\n    // \"PUNDIX\": \"\",\r\n    // \"CELR\": \"\",\r\n    // \"LF\": \"\",\r\n    // \"ARW\": \"\",\r\n    // \"MSB\": \"\",\r\n    // \"RLY\": \"\",\r\n    // \"OCEAN\": \"\",\r\n    // \"BFC\": \"\",\r\n    // \"ALICE\": \"\",\r\n    // \"CAKE\": \"\",\r\n    // \"BNT\": \"\",\r\n    // \"XVS\": \"\",\r\n    // \"CHZ\": \"\",\r\n    // \"AXS\": \"\",\r\n    // \"DAI\": \"\",\r\n    // \"MATIC\": \"\",\r\n    // \"BAKE\": \"\",\r\n    // \"VELO\": \"\",\r\n    // \"BCD\": \"\",\r\n    // \"XLM\": \"\",\r\n    // \"GXC\": \"\",\r\n    // \"BTT\": \"\",\r\n    // \"VSYS\": \"\",\r\n    // \"IPX\": \"\",\r\n    // \"WICC\": \"\",\r\n    // \"ONT\": \"\",\r\n    // \"LUNA\": \"\",\r\n    // \"AION\": \"\",\r\n    // \"META\": \"\",\r\n    \"KLAY\": \"KLAY 클레이\",\r\n    // \"ONG\": \"\",\r\n    // \"ALGO\": \"\",\r\n    // \"JST\": \"\",\r\n    // \"XTZ\": \"\",\r\n    // \"MLK\": \"\",\r\n    // \"WEMIX\": \"\",\r\n    // \"DOT\": \"\",\r\n    // \"ATOM\": \"\",\r\n    // \"SSX\": \"\",\r\n    // \"TEMCO\": \"\",\r\n    // \"HIBS\": \"\",\r\n    // \"BURGER\": \"\",\r\n    // \"DOGE\": \"\",\r\n    // \"KSM\": \"\",\r\n    // \"CTK\": \"\",\r\n    // \"XYM\": \"\",\r\n    // \"BNB\": \"\",\r\n    // \"SUN\": \"\",\r\n    // \"XEC\": \"\",\r\n    // \"PCI\": \"\",\r\n    // \"SOL\": \"\",\r\n    // \"date\"\r\n}\r\n\r\n\r\n//거래소명\r\nexport const EXCHANGE_NAME = {\r\n    BITHUMB: 'BITHUMB'\r\n}\r\n\r\n//쿠키에 저장될 코인 명칭\r\nexport const COOKIE_NAME = {\r\n    COIN: 'coin'\r\n}\r\n\r\nexport const COLOR = {\r\n    PLUS: '#ff698c',\r\n    MINUS: '#3ba5ff',\r\n    IMPORTANT: '#40d575'    \r\n}\r\n\r\nexport default {\r\n    COIN_NAME,\r\n    EXCHANGE_NAME,\r\n    COOKIE_NAME,\r\n    COLOR\r\n}","\r\nimport React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport './coinPrice.css'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\nimport {GiSpeaker, GiSpeakerOff} from 'react-icons/gi'\r\nimport {AiOutlinePoweroff} from 'react-icons/ai'\r\n\r\nimport ComUtil from '../util/comUtil'\r\nimport store from '../store';\r\n\r\nconst colorList = ['hotpink', '#69c1ff', '#a3ff69']\r\n\r\nconst StyledText = styled.div`\r\n    transition: 0.5s;\r\n    color: ${p => p.color};\r\n`\r\nfunction BitcoinPrice(){\r\n\r\n    const [data, setData] = useState()\r\n    const [color, setColor] = useState(0)\r\n    // const [color, setColor] =>\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        search()\r\n    }, [])\r\n\r\n    //5초마다 시세만 조회하여 세팅\r\n    useInterval(() => {        \r\n        search()     \r\n    }, 5000)\r\n\r\n    const search = async () => {\r\n        const res = await axios.get(`https://api.bithumb.com/public/ticker/BTC_KRW` + '_' + new Date().getTime());\r\n        const newData = res.data.data        \r\n        const rate = ComUtil.getRate(newData.closing_price, newData.opening_price)\r\n        // setData({...newData, rate: rate})\r\n        setData(prev =>{\r\n            return {...newData, rate: rate}\r\n        })\r\n    }\r\n\r\n    if(!data) return null\r\n\r\n    return(\r\n        <StyledText color={data.rate > 0 ? store.COLOR.PLUS : store.COLOR.MINUS}>\r\n            BTC&nbsp;&nbsp;\r\n            {parseFloat(data.closing_price).toLocaleString('ko-KR')}원\r\n            &nbsp;&nbsp;\r\n            <span style={{fontSize: 16}}>\r\n                {data.rate > 0 && '+'}{data.rate}%\r\n            </span>\r\n        </StyledText>\r\n    )\r\n}\r\nexport default BitcoinPrice","import React, {useEffect, useState, useRef} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n    margin-top: 20px;\r\n    padding: 16px;\r\n    //border: 1px solid whitesmoke;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: whitesmoke;\r\n    font-size: 15px;  \r\n    text-align: left;      \r\n`\r\n\r\nfunction ReadMe(){\r\n    \r\n    return(            \r\n        <Content>   \r\n            <ul>\r\n                <li>지원 브라우저 : 삼성인터넷, 크롬 등</li>\r\n                <li>시세정보 : 현재 빗썸만 지원하고 있습니다.</li>\r\n                <li>전원 버튼 클릭시</li>\r\n                <ul>\r\n                    <li>전체가 검은화면으로 바뀝니다. 이때 더블클릭하면 원래 화면으로 돌아 옵니다.</li>\r\n                    <li>음성이 켜져있으면 여전히 음성이 나옵니다.</li>\r\n                </ul>\r\n                \r\n                <li>[안드로이드] 한국어로 읽히지 않을때</li>\r\n                <ol>\r\n                    <li>설정 > 일반 > 글자읽어주기</li>\r\n                    <li>기본엔진을 \"삼성TTS 엔진\"으로 설정</li>\r\n                    <li>언어를 한국어(대한민국) 으로 설정\r\n                        <br />\r\n                        (만약 언어에 한국어가 없다면 기본엔진 오른쪽의 설정 버튼을 눌러 최신 버전 다운로드 후 삼성TTS 한국어를 다운로드 하시기 바랍니다.)\r\n                    </li>                    \r\n                </ol>                \r\n            </ul>\r\n        </Content>   \r\n    )\r\n}\r\nexport default ReadMe","import axios, {cacheAdapterEnhancer} from 'axios'\r\nimport store, { EXCHANGE_NAME } from \"../store\"\r\n\r\n\r\n//빗썸 시세\r\n//ALL 전체\r\n//BLY 블리 등등..\r\nasync function getBithumbSise(coin, cache = false) {    \r\n    try{\r\n        const {status, data} = await axios.get(`https://api.bithumb.com/public/ticker/${coin}_KRW` + (cache ? '_' + new Date().getTime() : ''));\r\n        if(status === 200) {\r\n            return data.data\r\n        }\r\n        return []\r\n    }catch(error){\r\n        // console.error(error.message)        \r\n    }\r\n}\r\n\r\nexport async function getCoinList(name) {\r\n\r\n    let coinList = []\r\n\r\n    if(name === EXCHANGE_NAME.BITHUMB) {\r\n\r\n        //전체 시세\r\n        const siseObj = await getBithumbSise('ALL', false)\r\n        // coinList = Object.keys(res.data)\r\n        \r\n        Object.keys(siseObj).map(coinName => {\r\n            if(coinName !== 'date') {\r\n                //코인이름과 일치 되는항목만 담기\r\n                if(store.COIN_NAME[coinName])\r\n                    coinList.push({value: coinName, name: store.COIN_NAME[coinName]})\r\n            }\r\n        })\r\n\r\n        return coinList\r\n        \r\n        // return [\r\n        //     {value: 'BLY', name: 'BLY 블로서리' },    \r\n        //     {value: 'BTC', name: 'BTC 비트코인' },\r\n        //     {value: 'ETH', name: 'ETH 이더리움' },    \r\n        //     {value: 'XRP', name: 'XRP 리플' },\r\n        //     {value: 'EOS', name: 'EOS 이오스' },\r\n        //     {value: 'MANA', name: 'MANA 디센트럴랜드' },\r\n        //     {value: 'ADA', name: 'ADA 에이다' },\r\n        //     {value: 'RSR', name: 'RSR 리저브라이트' },            \r\n        // ]\r\n        \r\n    }\r\n}\r\nexport default {\r\n    getCoinList\r\n}","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport './coinPrice.css'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\nimport {GiSpeaker, GiSpeakerOff} from 'react-icons/gi'\r\nimport {AiOutlinePoweroff} from 'react-icons/ai'\r\n\r\nimport BitcoinPrice from './BitcoinPrice'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReadMe from './ReadMe'\r\n\r\nimport store from '../store'\r\nimport comUtil from '../util/comUtil'\r\nimport commonApi from '../lib/commonApi'\r\n\r\n\r\nconst importantCoinNameList = ['BTC', 'ETH', 'BLY', 'EOS', 'RSR', 'MANA', 'XRP', 'ADA']\r\n\r\nconst theme = 'white'\r\nconst borderColor = '#505050'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;    \r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n\r\n    ${p => !p.display && 'opacity: 0'};\r\n\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n    // margin-top: 30px;\r\n    display: flex;    \r\n    opacity: 0.5;\r\n    color: white;\r\n`\r\n\r\nconst SecretButton = styled.div`\r\n    color: ${theme};\r\n    font-size: 25px;\r\n    // margin-left: 20px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.2s;\r\n    // border-radius: 50%;\r\n    opacity: 0.7;\r\n    &:active {\r\n        background-color: ${borderColor};\r\n    }\r\n`;\r\n\r\nconst OpacityContainer = styled.div`\r\n    opacity: ${p => p.opacity};\r\n`\r\n\r\nconst Container = styled.div`      \r\n\r\n    \r\n    color: ${theme};    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > * {\r\n        margin-bottom: 10px;\r\n    }    \r\n    & > *:last-child {\r\n        margin: 0;\r\n    }\r\n\r\n    //가격\r\n    & > *:nth-child(3){\r\n        font-size: 30px;\r\n        line-height: 40px;\r\n        margin-bottom: 0;        \r\n    }\r\n    //24시간 거래량\r\n    & > *:nth-child(4){\r\n        font-size: 15px;\r\n    }\r\n\r\n    //스피커 버튼 컨테이너\r\n    & > *:nth-child(5){\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n`\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: transparent;  \r\n    color: ${theme};  \r\n    font-size: 13px;\r\n    border: 0;//1px solid #818181;\r\n    margin-top: 5px;\r\n    // border-radius: 4px;\r\n    // padding: 10px;\r\n`\r\n\r\nconst StyledOption = styled.option`\r\n    background: black;\r\n    ${p => p.important && `color: ${store.COLOR.IMPORTANT}`};\r\n`\r\n\r\nconst Button = styled.div`\r\n    // width: 100px;\r\n    // font-size: 14px;\r\n    // min-height: 30px;\r\n    // line-height: 30px;\r\n    // border-radius: 20px;\r\n    // border: 1px solid ${borderColor};    \r\n    cursor: pointer;        \r\n`\r\n\r\nconst SpeechWrap = styled.div`\r\n    visibility: hidden\r\n`;\r\n\r\n\r\n//등락 퍼센트\r\nfunction getRate(closing_price, opening_price) {\r\n    const __closing_price  = parseFloat(closing_price)\r\n    const __opening_price = parseFloat(opening_price)        \r\n    const __now_price = __closing_price - __opening_price\r\n    const __rate = (__now_price / __opening_price) * 100\r\n    return parseFloat(__rate.toFixed(2));\r\n}\r\n\r\n\r\nconst DELAY = 5000 //5초\r\nconst SPEAKER_INTERVAL = 10000 //10초\r\n\r\nfunction CoinPrice() {\r\n\r\n    const [coinList, setCoinList] = useState()\r\n    const [coin, setCoin] = useState()\r\n    const [data, setData] = useState()\r\n    const [text, setText] = useState('')    \r\n    const [delay, setDelay] = useState(DELAY)    \r\n    const currencyRef = useRef()    \r\n    const [readmeOpen, setReadmeOpen] = useState(false)\r\n    \r\n    const [speaker, setSpeaker] = useState(false)//소리 키는지 여부\r\n    const [speakerInterval, setSpeakerInterval] = useState(null) //소리 인터벌\r\n\r\n    const [checked, setChecked] = useState(false)//퍼센트 발음 추가 여부\r\n\r\n    useEffect(() => {    \r\n        async function fetch() {\r\n            const newCoinList = await getCoinList()\r\n\r\n            let newCoin = newCoinList[0].value;\r\n            let cookie = comUtil.getCookie()\r\n            if(cookie.coin) {\r\n                newCoin = cookie.coin\r\n            }\r\n\r\n            setCoin(newCoin)\r\n            search(newCoin)\r\n        }        \r\n        fetch()\r\n    }, [])\r\n\r\n    //5초마다 시세만 조회하여 세팅\r\n    useInterval(() => {        \r\n        search(coin)     \r\n    }, delay)\r\n\r\n\r\n    //10초에 한번씩 이전 시세와 달라졌는지 비교 후 음성 텍스트 세팅\r\n    useInterval(() => {\r\n        checkAndSettingText()\r\n    }, speakerInterval) \r\n  \r\n    //거래소 시세 불러오기\r\n    const getCoinList = async () => {\r\n        const coinList = await commonApi.getCoinList(store.EXCHANGE_NAME.BITHUMB)        \r\n        console.log(coinList)\r\n        setCoinList(coinList)\r\n        return coinList        \r\n    }\r\n\r\n    const checkAndSettingText = () => {\r\n        if(data) {            \r\n\r\n            //시세가 다르고, 스피커 온 일때만\r\n            if(data.closing_price != currencyRef.current && speaker) {\r\n\r\n                //현재 가격으로 동기화\r\n                currencyRef.current = data.closing_price\r\n\r\n                let newText = parseFloat(data.closing_price).toLocaleString('ko-KR') + '원 '\r\n\r\n                console.log('checked'+checked)\r\n\r\n                if(checked) {\r\n                    newText += data.rate > 0 ? '플러스' : ''\r\n                    newText += data.rate.toLocaleString() +'%'\r\n                }\r\n\r\n                setText(newText)                \r\n            }\r\n        }\r\n    }\r\n\r\n    const search = async (_coin) => {\r\n\r\n      const res = await axios.get(`https://api.bithumb.com/public/ticker/${_coin}_KRW` + '_' + new Date().getTime());\r\n    // const res = await axios.get(`https://api.bithumb.com/public/ticker/BLY_KRW` + '_' + new Date().getTime());\r\n              \r\n        const newData = res.data.data        \r\n        const rate = getRate(newData.closing_price, newData.opening_price)\r\n        setData({...newData, rate: rate})        \r\n       \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(text)            \r\n            \r\n            document.getElementsByClassName('rs-play')[0].click()\r\n\r\n            //현재 버그픽스를 고치기 위해 임시로 설정(위에 클릭을 하면 자동으로 최상단 엘리먼트의 onClick을 해버려서 display가 false임에도 true로 되어 버려서임)\r\n            // if(!display) {\r\n            //     setDisplay(false)\r\n            // }\r\n    }, [text])\r\n\r\n    const onSpeakerClick = e => {        \r\n        e.stopPropagation()\r\n        const newSpeaker = !speaker\r\n        setSpeaker(newSpeaker)     \r\n\r\n        if(newSpeaker) {            \r\n            setSpeakerInterval(SPEAKER_INTERVAL)\r\n            toast(\"음성을 설정했습니다.\")\r\n        }else{\r\n            setSpeakerInterval(null)\r\n            toast(\"음소거 처리 되었습니다.\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //코인 변경시\r\n    const onSelectChange = (e) => {        \r\n        const value = e.target.value\r\n        setCoin(value)            \r\n        search(value)\r\n        \r\n        //쿠키 세팅\r\n        comUtil.setCookie(store.COOKIE_NAME.COIN, value)        \r\n    }\r\n\r\n    const [opacity, setOpacity] = useState(1)\r\n\r\n    const onOpacityChange = (value) => {\r\n        let newOpacity = opacity + value\r\n        if(newOpacity > 1){\r\n            newOpacity = 1\r\n        }\r\n        if(newOpacity < 0) {\r\n            newOpacity = 0\r\n        }\r\n        setOpacity(newOpacity)\r\n    }\r\n \r\n    //퍼센트까지 말하기\r\n    const handleChange = () => {\r\n        const newChecked = !checked\r\n        setChecked(newChecked);\r\n\r\n        if(newChecked)\r\n            toast(\"퍼센트까지 말하기로 설정\")\r\n        else\r\n            toast(\"퍼센트 말하기 취소\")\r\n            \r\n      };\r\n\r\n    const [display, setDisplay] = useState(true)\r\n    \r\n    //디스플레이가 꺼져있을때만 켠다\r\n    const onDoubleClick = e => {                \r\n        e.stopPropagation()\r\n\r\n        if(!display) {            \r\n            setDisplay(true)\r\n        }\r\n    }\r\n\r\n    const onOffClick = e => {\r\n        e.stopPropagation()\r\n        setDisplay(false)\r\n    }\r\n\r\n    const onOnClick = e => {       \r\n        e.stopPropagation()\r\n        setDisplay(true)\r\n    }\r\n\r\n    if(!coinList) return null\r\n    if(!data) return null\r\n  \r\n      const __rate = getRate()\r\n\r\n    return (\r\n\r\n        <>\r\n            {                \r\n                !display && (\r\n                    <div style={{position: 'fixed', top: 0, left: 0, bottom: 0, right: 0, color: 'red', background: 'black', zIndex: 99}} \r\n                        // onClick={onOnClick}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                )\r\n            }\r\n            \r\n        <Wrapper className='css-selector' display={display} >\r\n\r\n            \r\n            \r\n            <OpacityContainer opacity={opacity}>\r\n                <Container>                \r\n\r\n                    <BitcoinPrice />\r\n\r\n\r\n\r\n                    <StyledSelect onChange={onSelectChange} value={coin}>\r\n                        {coinList.map(item => {\r\n                            const isImportant = importantCoinNameList.includes(item.value)\r\n                            return (\r\n                                <StyledOption \r\n                                value={item.value} \r\n                                // important={isImportant} \r\n                            >\r\n                                {item.name}\r\n                                {isImportant ? ' 🧡' : null}\r\n                            </StyledOption>\r\n                            )\r\n                        })}\r\n                    </StyledSelect>\r\n                    <div>\r\n                        <b>{parseFloat(data.closing_price).toLocaleString('ko-KR')}원</b>\r\n                        <span style={{fontSize: 16, marginLeft: 10}}>\r\n                            {data.rate > 0 && '+'}{data.rate}%\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            parseFloat(data.acc_trade_value_24H) > 1000000 ? \r\n                            `${Math.round((parseFloat(data.acc_trade_value_24H) / 1000000), 0).toLocaleString('ko-KR')}백만` :                        \r\n                            Math.round((parseFloat(data.acc_trade_value_24H)), 0).toLocaleString('ko-KR')\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    <div>\r\n                        <Button onClick={onSpeakerClick}>\r\n                            {\r\n                                speaker ? <GiSpeaker size={30}/> : <GiSpeakerOff size={30} />                        \r\n                            }\r\n                        </Button>                \r\n                        <label style={{height: 30, marginLeft: 10}}>\r\n                            <input type=\"checkbox\" \r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                disabled={!speaker}\r\n                            />\r\n                            %\r\n                        </label>\r\n                    </div>\r\n                </Container>\r\n            </OpacityContainer>\r\n            \r\n            <ButtonGroup>\r\n                <SecretButton onClick={onOpacityChange.bind(this, -0.2)}>\r\n                    <BsMoon />\r\n                </SecretButton>\r\n                <SecretButton onClick={onOpacityChange.bind(this, 0.2)}>\r\n                    <BsBrightnessHigh />                    \r\n                </SecretButton>\r\n\r\n                <SecretButton onClick={onOffClick}>\r\n                    <AiOutlinePoweroff />\r\n                </SecretButton>\r\n\r\n            </ButtonGroup>\r\n\r\n            <OpacityContainer opacity={opacity}>\r\n                <div style={{color: theme}}>\r\n                    <div style={{marginTop: 16, textAlign:'center', fontSize: 12, fontWeight: 'lighter'}}>존버는 승리한다 - made by 팽뚜아빠</div>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: 5, textAlign:'center', fontSize: 12}}>                        \r\n                        <div style={{marginRight: 16}}>\r\n                            <a style={{color: theme}} href=\"mailto:ksmark8543@naver.com\">Contact me</a>                            \r\n                        </div>\r\n                        <div style={{textAlign: 'center', cursor: 'pointer'}} onClick={() => setReadmeOpen(!readmeOpen)}>\r\n                            <u>How to use?</u>            \r\n                        </div>                        \r\n                    </div>                \r\n                </div>\r\n                {\r\n                    readmeOpen && <ReadMe />\r\n                }\r\n            </OpacityContainer>\r\n\r\n            <SpeechWrap >\r\n                <Speech        \r\n                    displayText={false}\r\n                    stop={true}\r\n                    pause={true}\r\n                    resume={true}\r\n                    // textAsButton={true}\r\n                    // voice='Daniel'\r\n                    // lang={'en'}\r\n                    text={text}\r\n                    lang={'ko-KR'}                    \r\n                />               \r\n            </SpeechWrap>\r\n\r\n            \r\n        </Wrapper>\r\n\r\n        \r\n\r\n        <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n  \r\nexport default CoinPrice","import {useEffect, useState} from 'react'\nimport CoinPrice from './components/coinPrice'\nimport css from './App.css'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div>\n        <CoinPrice />\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}