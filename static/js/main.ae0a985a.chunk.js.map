{"version":3,"sources":["components/hook/useInterval.js","components/coinPrice/index.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","coinList","value","name","theme","borderColor","Wrapper","styled","div","p","opacity","Fixed","SecretButton","Container","StyledSelect","select","StyledOption","option","Button","SpeechWrap","CoinPrice","useState","coin","setCoin","data","setData","setDelay","rate","setRate","currencyRef","checked","setChecked","search","_coin","a","axios","get","Date","getTime","res","newData","console","log","closing_price","document","getElementsByTagName","click","getRate","setOpacity","onOpacityChange","newOpacity","parseFloat","opening_price","toFixed","className","onChange","e","target","map","item","toLocaleString","style","fontSize","marginLeft","acc_trade_value_24H","Math","round","onClick","newDelay","size","height","type","marginTop","color","textAlign","fontWeight","href","bind","this","displayText","stop","pause","resume","text","lang","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae0a985a.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      const tick = () => {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n  export default useInterval","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport './coinPrice.css'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\nimport {GiSpeaker, GiSpeakerOff} from 'react-icons/gi'\r\n\r\nconst coinList = [\r\n    {value: 'BLY', name: 'BLY 블로서리' },    \r\n    {value: 'BTC', name: 'BTC 비트코인' },\r\n    {value: 'ETH', name: 'ETH 이더리움' },    \r\n    {value: 'XRP', name: 'XRP 리플' },\r\n    {value: 'EOS', name: 'EOS 이오스' },\r\n    {value: 'MANA', name: 'MANA 디센트럴랜드' },\r\n    {value: 'ADA', name: 'ADA 에이다' },\r\n    {value: 'RSR', name: 'RSR 리저브라이트' },\r\n    \r\n]\r\n\r\nconst theme = 'white'\r\nconst borderColor = '#505050'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;    \r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n\r\n    opacity: ${p => p.opacity};\r\n`\r\n\r\nconst Fixed = styled.div`\r\n    margin-top: 30px;\r\n    display: flex;    \r\n    opacity: 0.5;\r\n    color: white;\r\n`\r\n\r\nconst SecretButton = styled.div`\r\n    color: ${theme};\r\n    font-size: 25px;\r\n    // margin-left: 20px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.2s;\r\n    // border-radius: 50%;\r\n    opacity: 0.7;\r\n    &:active {\r\n        background-color: ${borderColor};\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`      \r\n\r\n    opacity: ${p => p.opacity};\r\n    color: ${theme};    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > * {\r\n        margin-bottom: 10px;\r\n    }    \r\n    & > *:last-child {\r\n        margin: 0;\r\n    }\r\n\r\n    //가격\r\n    & > *:nth-child(2){\r\n        font-size: 25px;\r\n        line-height: 40px;\r\n        margin-bottom: 0;        \r\n    }\r\n    //24시간 거래량\r\n    & > *:nth-child(3){\r\n        font-size: 15px;\r\n    }\r\n\r\n    //스피커 버튼 컨테이너\r\n    & > *:nth-child(4){\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n`\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: transparent;  \r\n    color: ${theme};  \r\n    font-size: 13px;\r\n    border: 0;\r\n    // padding: 8px;\r\n`\r\n\r\nconst StyledOption = styled.option`\r\n    background: black;\r\n`\r\n\r\nconst Button = styled.div`\r\n    // width: 100px;\r\n    // font-size: 14px;\r\n    // min-height: 30px;\r\n    // line-height: 30px;\r\n    // border-radius: 20px;\r\n    // border: 1px solid ${borderColor};    \r\n    cursor: pointer;        \r\n`\r\n\r\nconst SpeechWrap = styled.div`\r\n    visibility: hidden\r\n`;\r\n\r\n\r\nconst DELAY = 10000 //10초\r\n\r\nfunction CoinPrice() {\r\n\r\n    const [coin, setCoin] = useState(coinList[0].value)\r\n    const [data, setData] = useState()\r\n    const [delay, setDelay] = useState(DELAY)\r\n    const [rate, setRate] = useState(0)\r\n    const currencyRef = useRef()\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    useEffect(() => {    \r\n        search(coin)\r\n    }, [])\r\n\r\n    useInterval(() => {        \r\n        search(coin)     \r\n    }, delay)\r\n  \r\n    const search = async (_coin) => {\r\n\r\n      const res = await axios.get(`https://api.bithumb.com/public/ticker/${_coin}_KRW` + '_' + new Date().getTime());\r\n              \r\n        const newData = res.data.data\r\n        \r\n        // if(currencyRef.current != newData.closing_price){\r\n            setData(newData)       \r\n             \r\n        // }\r\n\r\n        \r\n        // if(data){        \r\n        //     if(newData.closing_price !== data.closing_price) {\r\n        //         document.getElementsByTagName('button')[0].click()       \r\n        //     }\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('===='+currencyRef.current)\r\n        if(data) {\r\n            console.log(currencyRef.current)\r\n            if(data.closing_price != currencyRef.current) {\r\n                currencyRef.current = data.closing_price\r\n                document.getElementsByTagName('button')[0].click()       \r\n            }\r\n        }\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        if(data){\r\n            setRate(getRate())\r\n        }\r\n    }, [data])\r\n\r\n    const toggle = () => {        \r\n        const newDelay = delay ? null : DELAY\r\n        \r\n        //인터벌 시작 or 종료\r\n        setDelay(newDelay)              \r\n\r\n        //시작 하면 바로 한번 조회\r\n        if(newDelay) {\r\n            search(coin)\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const onSelectChange = (e) => {\r\n        setCoin(e.target.value)    \r\n        \r\n        search(e.target.value)\r\n    }\r\n\r\n    const [opacity, setOpacity] = useState(1)\r\n\r\n    const onOpacityChange = (value) => {\r\n        let newOpacity = opacity + value\r\n        if(newOpacity > 1){\r\n            newOpacity = 1\r\n        }\r\n        if(newOpacity < 0) {\r\n            newOpacity = 0\r\n        }\r\n        setOpacity(newOpacity)\r\n    }\r\n\r\n    //등락 퍼센트\r\n    const getRate = () => {\r\n        const closing_price  = parseFloat(data.closing_price)\r\n        const opening_price = parseFloat(data.opening_price)        \r\n        const now_price = closing_price - opening_price\r\n        const rate = (now_price / opening_price) * 100\r\n        return parseFloat(rate.toFixed(2));\r\n    }\r\n\r\n    const handleChange = () => {\r\n        setChecked(!checked);\r\n      };\r\n\r\n    if(!data) return null\r\n  \r\n    return (\r\n\r\n        <>\r\n        \r\n        {/* <div style={{color: 'white'}}>\r\n        {opacity}\r\n        </div> */}\r\n        \r\n        \r\n        <Wrapper className='css-selector'>\r\n            <Container opacity={opacity}>                \r\n\r\n                <StyledSelect onChange={onSelectChange}>\r\n                    {coinList.map(item => <StyledOption value={item.value}>{item.name}</StyledOption>)}\r\n                </StyledSelect>\r\n                <div>\r\n                    <b>{parseFloat(data.closing_price).toLocaleString('ko-KR')}원</b>\r\n                    <span style={{fontSize: 16, marginLeft: 10}}>\r\n                        {rate > 0 && '+'}{rate}%\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        parseFloat(data.acc_trade_value_24H) > 1000000 ? \r\n                        `${Math.round((parseFloat(data.acc_trade_value_24H) / 1000000), 0).toLocaleString('ko-KR')}백만` :                        \r\n                        Math.round((parseFloat(data.acc_trade_value_24H)), 0).toLocaleString('ko-KR')\r\n                    }\r\n                    \r\n                </div>\r\n\r\n                \r\n                <div>\r\n                    <Button onClick={toggle}>\r\n                    {\r\n                        delay ? <GiSpeaker size={30}/> : <GiSpeakerOff size={30} />\r\n                    }\r\n                    </Button>                \r\n                    <label style={{height: 30, marginLeft: 10}}>\r\n                        <input type=\"checkbox\" \r\n                            checked={checked}\r\n                            onChange={handleChange}\r\n                        />\r\n                        %\r\n                    </label>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n                <div style={{marginTop: 16, color: theme, textAlign:'center', fontSize: 12, fontWeight: 'lighter'}}>존버는 승리한다 - made by Jaden</div>\r\n                <div style={{marginTop: 5, textAlign:'center', fontSize: 12}}>\r\n                    <a style={{color: theme}} href=\"mailto:ksmark8543@naver.com\">contact me</a>\r\n                </div>                \r\n            </Container>\r\n            \r\n            \r\n            <Fixed>\r\n                <SecretButton onClick={onOpacityChange.bind(this, -0.2)}>\r\n                    <BsMoon />\r\n                </SecretButton>\r\n                <SecretButton onClick={onOpacityChange.bind(this, 0.2)}>\r\n                    <BsBrightnessHigh />                    \r\n                </SecretButton>\r\n{/* \r\n                <SecretButton onClick={toggle}>                \r\n                    {\r\n                        delay ? <GiSpeaker size={30}/> : <GiSpeakerOff size={30} />\r\n                    }\r\n                </SecretButton>\r\n                <SecretButton>       \r\n                    <label style={{fontSize: 15}}>\r\n                        <input type=\"checkbox\" \r\n                            checked={checked}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {` %`}\r\n                    </label>\r\n                </SecretButton> */}\r\n\r\n\r\n            </Fixed>\r\n\r\n\r\n\r\n            <SpeechWrap >\r\n                <Speech        \r\n                    displayText={false}\r\n                    stop={true}\r\n                    pause={true}\r\n                    resume={true}\r\n                    // textAsButton={true}\r\n                    // voice='Daniel'\r\n                    // lang={'en'}\r\n                    text={\r\n                        parseFloat(data.closing_price).toLocaleString('ko-KR') + '원 ' +                         \r\n                        (checked ? (getRate() > 0 ? '플러스' : '') + getRate().toLocaleString() +'%' : '')\r\n                    }\r\n                    lang={'ko-KR'}                    \r\n                />\r\n            </SpeechWrap>\r\n        </Wrapper>\r\n\r\n        \r\n\r\n\r\n        \r\n        </>\r\n    );\r\n}\r\n  \r\nexport default CoinPrice","import {useEffect, useState} from 'react'\nimport CoinPrice from './components/coinPrice'\nimport css from './App.css'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div>\n        <CoinPrice />\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}