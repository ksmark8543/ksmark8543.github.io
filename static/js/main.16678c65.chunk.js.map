{"version":3,"sources":["components/hook/useInterval.js","components/util/ComUtil.js","components/coinPrice/BitcoinPrice.js","components/coinPrice/ReadMe.js","components/coinPrice/index.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","getRate","closing_price","opening_price","__closing_price","parseFloat","__opening_price","toFixed","getRandomInt","max","Math","floor","random","colorList","StyledText","styled","div","p","color","BitcoinPrice","useState","data","setData","search","a","axios","get","Date","getTime","res","newData","rate","ComUtil","prev","toLocaleString","style","fontSize","Content","ReadMe","coinList","value","name","theme","borderColor","Wrapper","display","ButtonGroup","SecretButton","OpacityContainer","opacity","Container","StyledSelect","select","StyledOption","option","Button","SpeechWrap","CoinPrice","coin","setCoin","text","setText","currencyRef","readmeOpen","setReadmeOpen","speaker","setSpeaker","speakerInterval","setSpeakerInterval","checked","setChecked","checkAndSettingText","newText","console","log","_coin","document","getElementsByClassName","click","setDisplay","setOpacity","onOpacityChange","newOpacity","position","top","left","bottom","right","background","zIndex","onClick","e","stopPropagation","className","onChange","target","map","item","marginLeft","acc_trade_value_24H","round","newSpeaker","toast","size","height","type","newChecked","disabled","bind","this","marginTop","textAlign","fontWeight","alignItems","justifyContent","marginRight","href","displayText","stop","pause","resume","lang","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wTAkBiBA,EAjBG,SAACC,EAAUC,GAC3B,IAAMC,EAAgBC,IAAMC,SAE5BD,IAAME,WAAU,WACdH,EAAcI,QAAUN,IACvB,CAACA,IAEJG,IAAME,WAAU,WAId,GAAc,OAAVJ,EAAgB,CAClB,IAAIM,EAAKC,aAJE,WACXN,EAAcI,YAGaL,GAC3B,OAAO,kBAAMQ,cAAcF,OAE5B,CAACN,K,gCCHO,I,EAAA,GACXS,QAbmB,SAACC,EAAeC,GACnC,IAAMC,EAAmBC,WAAWH,GAC9BI,EAAkBD,WAAWF,GAGnC,OAAOE,aAFaD,EAAkBE,GACRA,EAAmB,KACxBC,QAAQ,KASjCC,aANJ,SAAsBC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,K,OCM9BI,EAAY,CAAC,UAAW,UAAW,WAEnCC,EAAaC,IAAOC,IAAV,oEAEH,SAAAC,GAAC,OAAIA,EAAEC,SA0CLC,I,EAAAA,EAxCf,WAEI,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,6BAKAxB,qBAAU,WACN2B,MACD,IAGHjC,GAAY,WACRiC,MACD,KAEH,IAAMA,EAAM,uCAAG,gCAAAC,EAAA,sEACOC,IAAMC,IAAI,kDAAwD,IAAIC,MAAOC,WADpF,OACLC,EADK,OAELC,EAAUD,EAAIR,KAAKA,KACnBU,EAAOC,EAAQ/B,QAAQ6B,EAAQ5B,cAAe4B,EAAQ3B,eAE5DmB,GAAQ,SAAAW,GACJ,OAAO,2BAAIH,GAAX,IAAoBC,KAAMA,OANnB,2CAAH,qDAUZ,OAAIV,EAGA,eAACP,EAAD,CAAYI,MAAOL,EAAUmB,EAAQxB,aAAa,IAAlD,wBAEKH,WAAWgB,EAAKnB,eAAegC,eAAe,SAFnD,kBAII,uBAAMC,MAAO,CAACC,SAAU,IAAxB,UACKf,EAAKU,KAAO,GAAK,IAAKV,EAAKU,KADhC,UAPS,M,OC9CfM,G,MAAUtB,IAAOC,IAAV,0MAuBEsB,I,kBAAAA,EAdf,WAEI,OACI,eAACD,EAAD,2GAC2B,uBAD3B,mEAEkB,uBAFlB,iCAGS,uBAHT,sEAIqB,uBAJrB,6FAK6B,uBAL7B,gGAM2B,uBAN3B,0VCGFE,EAAW,CACb,CAACC,MAAO,MAAOC,KAAM,gCACrB,CAACD,MAAO,MAAOC,KAAM,gCACrB,CAACD,MAAO,MAAOC,KAAM,gCACrB,CAACD,MAAO,MAAOC,KAAM,oBACrB,CAACD,MAAO,MAAOC,KAAM,0BACrB,CAACD,MAAO,OAAQC,KAAM,6CACtB,CAACD,MAAO,MAAOC,KAAM,0BACrB,CAACD,MAAO,MAAOC,KAAM,6CAInBC,EAAQ,QACRC,EAAc,UAEdC,EAAU7B,IAAOC,IAAV,oMAQP,SAAAC,GAAC,OAAKA,EAAE4B,SAAW,gBAInBC,EAAc/B,IAAOC,IAAV,oHAOX+B,EAAehC,IAAOC,IAAV,2UACL0B,EAYeC,GAItBK,EAAmBjC,IAAOC,IAAV,+CACP,SAAAC,GAAC,OAAIA,EAAEgC,WAGhBC,EAAYnC,IAAOC,IAAV,4pBAGF0B,GA8BPS,EAAepC,IAAOqC,OAAV,uNAELV,GAQPW,EAAetC,IAAOuC,OAAV,oDAIZC,EAASxC,IAAOC,IAAV,6NAMe2B,GAIrBa,EAAazC,IAAOC,IAAV,oDAMhB,SAASf,EAAQC,EAAeC,GAC5B,IAAMC,EAAmBC,WAAWH,GAC9BI,EAAkBD,WAAWF,GAGnC,OAAOE,aAFaD,EAAkBE,GACRA,EAAmB,KACxBC,QAAQ,IAyQtBkD,OAlQf,WAEI,MAAwBrC,mBAASmB,EAAS,GAAGC,OAA7C,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAwBvC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOwC,EAAP,KAAaC,EAAb,KACA,EAA0BzC,mBARhB,KAQV,mBAAO5B,EAAP,KACMsE,GADN,KACoBnE,oBACpB,EAAoCyB,oBAAS,GAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAEA,EAA8B5C,oBAAS,GAAvC,mBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAA8C9C,mBAAS,MAAvD,mBAAO+C,EAAP,KAAwBC,GAAxB,KAEA,GAA8BhD,oBAAS,GAAvC,qBAAOiD,GAAP,MAAgBC,GAAhB,MAEA1E,qBAAU,WACN2B,GAAOmC,KACR,IAGHpE,GAAY,WACRiC,GAAOmC,KACRlE,GAIHF,GAAY,WACRiF,OACDJ,GAEH,IAAMI,GAAsB,WACxB,GAAGlD,GAGIA,EAAKnB,eAAiB4D,EAAYjE,SAAWoE,EAAS,CAGrDH,EAAYjE,QAAUwB,EAAKnB,cAE3B,IAAIsE,EAAUnE,WAAWgB,EAAKnB,eAAegC,eAAe,SAAW,UAEvEuC,QAAQC,IAAI,UAAUL,IAEnBA,KACCG,GAAWnD,EAAKU,KAAO,EAAI,qBAAQ,GACnCyC,GAAWnD,EAAKU,KAAKG,iBAAkB,KAG3C2B,EAAQW,KAKdjD,GAAM,uCAAG,WAAOoD,GAAP,mBAAAnD,EAAA,sEAEKC,IAAMC,IAAI,gDAAyCiD,EAAzC,QAAuD,KAAM,IAAIhD,MAAOC,WAFvF,OAEPC,EAFO,OAILC,EAAUD,EAAIR,KAAKA,KACnBU,EAAO9B,EAAQ6B,EAAQ5B,cAAe4B,EAAQ3B,eACpDmB,EAAQ,2BAAIQ,GAAL,IAAcC,KAAMA,KANhB,2CAAH,sDAYZnC,qBAAU,WACHgE,GAECgB,SAASC,uBAAuB,WAAW,GAAGC,QAG1CjC,IACAkC,IAAW,KAEpB,CAACnB,IAEJ,IAqBA,GAA8BxC,mBAAS,GAAvC,qBAAO6B,GAAP,MAAgB+B,GAAhB,MAEMC,GAAkB,SAACzC,GACrB,IAAI0C,EAAajC,GAAUT,EACxB0C,EAAa,IACZA,EAAa,GAEdA,EAAa,IACZA,EAAa,GAEjBF,GAAWE,IAef,GAA8B9D,oBAAS,GAAvC,qBAAOyB,GAAP,MAAgBkC,GAAhB,MAqBA,OAAI1D,GAEapB,IAIb,sCAES4C,IACG,qBAAKV,MAAO,CAACgD,SAAU,QAASC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,EAAGrE,MAAO,MAAOsE,WAAY,QAASC,OAAQ,IAC7GC,QAfF,SAAAC,GACdA,EAAEC,kBACFb,IAAW,MAkBX,eAACnC,EAAD,CAASiD,UAAU,eAAehD,QAASA,GAAS6C,QAjCpC,SAAAC,GAChBA,EAAEC,kBAEE/C,IACAkC,IAAW,IA6Bf,UAII,cAAC/B,EAAD,CAAkBC,QAASA,GAA3B,SACI,eAACC,EAAD,WAEI,cAAC,EAAD,IAEA,cAACC,EAAD,CAAc2C,SA3EP,SAACH,GACpBhC,EAAQgC,EAAEI,OAAOvD,OACjBjB,GAAOoE,EAAEI,OAAOvD,QAyEJ,SACKD,EAASyD,KAAI,SAAAC,GAAI,OAAI,cAAC5C,EAAD,CAAcb,MAAOyD,EAAKzD,MAA1B,SAAkCyD,EAAKxD,YAEjE,gCACI,8BAAIpC,WAAWgB,EAAKnB,eAAegC,eAAe,SAAlD,YACA,uBAAMC,MAAO,CAACC,SAAU,GAAI8D,WAAY,IAAxC,UACK7E,EAAKU,KAAO,GAAK,IAAKV,EAAKU,KADhC,UAIJ,8BAEQ1B,WAAWgB,EAAK8E,qBAAuB,IAAvC,UACGzF,KAAK0F,MAAO/F,WAAWgB,EAAK8E,qBAAuB,IAAU,GAAGjE,eAAe,SADlF,gBAEAxB,KAAK0F,MAAO/F,WAAWgB,EAAK8E,qBAAuB,GAAGjE,eAAe,WAM7E,gCACI,cAACqB,EAAD,CAAQmC,QA/GL,SAAAC,GACnBA,EAAEC,kBACF,IAAMS,GAAcpC,EACpBC,EAAWmC,GAERA,GACCjC,GAnFa,KAoFbkC,YAAM,8DAENlC,GAAmB,MACnBkC,YAAM,qEAqGM,SAEQrC,EAAU,cAAC,IAAD,CAAWsC,KAAM,KAAQ,cAAC,IAAD,CAAcA,KAAM,OAG/D,wBAAOpE,MAAO,CAACqE,OAAQ,GAAIN,WAAY,IAAvC,UACI,uBAAOO,KAAK,WACRpC,QAASA,GACTyB,SApFP,WACjB,IAAMY,GAAcrC,GACpBC,GAAWoC,GAERA,EACCJ,YAAM,wEAENA,YAAM,uDA8EcK,UAAW1C,IAJnB,eAYZ,eAACnB,EAAD,WACI,cAACC,EAAD,CAAc2C,QAAST,GAAgB2B,KAAKC,MAAO,IAAnD,SACI,cAAC,IAAD,MAEJ,cAAC9D,EAAD,CAAc2C,QAAST,GAAgB2B,KAAKC,KAAM,IAAlD,SACI,cAAC,IAAD,MAGJ,cAAC9D,EAAD,CAAc2C,QA/EP,SAAAC,GACfA,EAAEC,kBACFb,IAAW,IA6EH,SACI,cAAC,IAAD,SAKR,eAAC/B,EAAD,CAAkBC,QAASA,GAA3B,UACI,sBAAKd,MAAO,CAACjB,MAAOwB,GAApB,UACI,qBAAKP,MAAO,CAAC2E,UAAW,GAAIC,UAAU,SAAU3E,SAAU,GAAI4E,WAAY,WAA1E,yEACA,sBAAK7E,MAAO,CAACU,QAAS,OAAQoE,WAAY,SAAUC,eAAgB,SAAUJ,UAAW,EAAGC,UAAU,SAAU3E,SAAU,IAA1H,UACI,qBAAKD,MAAO,CAACgF,YAAa,IAA1B,SACI,mBAAGhF,MAAO,CAACjB,MAAOwB,GAAQ0E,KAAK,8BAA/B,0BAEJ,qBAAKjF,MAAO,CAAC4E,UAAW,UAAWrB,QAAS,kBAAM1B,GAAeD,IAAjE,SACI,oDAKRA,GAAc,cAAC,EAAD,OAItB,cAACP,EAAD,UACI,cAAC,IAAD,CACI6D,aAAa,EACbC,MAAM,EACNC,OAAO,EACPC,QAAQ,EAIR5D,KAAMA,EACN6D,KAAM,eASlB,cAAC,IAAD,QA/Ga,M,MCnRNC,OAXf,WAEE,OACE,qBAAK7B,UAAU,MAAf,SACE,8BACE,cAAC,GAAD,SCGO8B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF1D,SAAS2D,eAAe,SAM1BZ,O","file":"static/js/main.16678c65.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      const tick = () => {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n  export default useInterval","//등락 퍼센트\r\nexport const getRate = (closing_price, opening_price) => {\r\n    const __closing_price  = parseFloat(closing_price)\r\n    const __opening_price = parseFloat(opening_price)        \r\n    const __now_price = __closing_price - __opening_price\r\n    const __rate = (__now_price / __opening_price) * 100\r\n    return parseFloat(__rate.toFixed(2));\r\n}\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport default {\r\n    getRate,\r\n    getRandomInt\r\n}","\r\nimport React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport './coinPrice.css'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\nimport {GiSpeaker, GiSpeakerOff} from 'react-icons/gi'\r\nimport {AiOutlinePoweroff} from 'react-icons/ai'\r\n\r\nimport ComUtil from '../util/ComUtil'\r\n\r\nconst colorList = ['hotpink', '#69c1ff', '#a3ff69']\r\n\r\nconst StyledText = styled.div`\r\n    transition: 0.5s;\r\n    color: ${p => p.color};\r\n`\r\nfunction BitcoinPrice(){\r\n\r\n    const [data, setData] = useState()\r\n    const [color, setColor] = useState(0)\r\n    // const [color, setColor] =>\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        search()\r\n    }, [])\r\n\r\n    //5초마다 시세만 조회하여 세팅\r\n    useInterval(() => {        \r\n        search()     \r\n    }, 5000)\r\n\r\n    const search = async () => {\r\n        const res = await axios.get(`https://api.bithumb.com/public/ticker/BTC_KRW` + '_' + new Date().getTime());\r\n        const newData = res.data.data        \r\n        const rate = ComUtil.getRate(newData.closing_price, newData.opening_price)\r\n        // setData({...newData, rate: rate})\r\n        setData(prev =>{\r\n            return {...newData, rate: rate}\r\n        })\r\n    }\r\n\r\n    if(!data) return null\r\n\r\n    return(\r\n        <StyledText color={colorList[ComUtil.getRandomInt(3)]}>\r\n            BTC&nbsp;&nbsp;\r\n            {parseFloat(data.closing_price).toLocaleString('ko-KR')}원\r\n            &nbsp;&nbsp;\r\n            <span style={{fontSize: 16}}>\r\n                {data.rate > 0 && '+'}{data.rate}%\r\n            </span>\r\n        </StyledText>\r\n    )\r\n}\r\nexport default BitcoinPrice","import React, {useEffect, useState, useRef} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n    margin-top: 20px;\r\n    padding: 16px;\r\n    //border: 1px solid whitesmoke;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: whitesmoke;\r\n    font-size: 15px;    \r\n`\r\n\r\nfunction ReadMe(){\r\n    \r\n    return(            \r\n        <Content>   \r\n            - 지원 브라우저 : 삼성인터넷, 크롬 등<br/>\r\n            - 한국어로 읽히지 않을때<br/>\r\n            안드로이드<br/>\r\n            설정 > 일반 > 글자읽어주기 <br/>\r\n            1. 기본엔진을 \"삼성TTS 엔진\"으로 설정.<br/>\r\n            2. 언어를 한국어(대한민국) 으로 설정.<br/>\r\n            만약 언어에 한국어가 없다면 기본엔진 오른쪽의 설정 버튼을 눌러 최신 버전 다운로드 후 삼성TTS 한국어를 다운로드 하시기 바랍니다.\r\n        </Content>   \r\n    )\r\n}\r\nexport default ReadMe","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport './coinPrice.css'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\nimport {GiSpeaker, GiSpeakerOff} from 'react-icons/gi'\r\nimport {AiOutlinePoweroff} from 'react-icons/ai'\r\n\r\nimport BitcoinPrice from './BitcoinPrice'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReadMe from './ReadMe'\r\n\r\nconst coinList = [\r\n    {value: 'BLY', name: 'BLY 블로서리' },    \r\n    {value: 'BTC', name: 'BTC 비트코인' },\r\n    {value: 'ETH', name: 'ETH 이더리움' },    \r\n    {value: 'XRP', name: 'XRP 리플' },\r\n    {value: 'EOS', name: 'EOS 이오스' },\r\n    {value: 'MANA', name: 'MANA 디센트럴랜드' },\r\n    {value: 'ADA', name: 'ADA 에이다' },\r\n    {value: 'RSR', name: 'RSR 리저브라이트' },\r\n    \r\n]\r\n\r\nconst theme = 'white'\r\nconst borderColor = '#505050'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;    \r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n\r\n    ${p => !p.display && 'opacity: 0'};\r\n\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n    // margin-top: 30px;\r\n    display: flex;    \r\n    opacity: 0.5;\r\n    color: white;\r\n`\r\n\r\nconst SecretButton = styled.div`\r\n    color: ${theme};\r\n    font-size: 25px;\r\n    // margin-left: 20px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.2s;\r\n    // border-radius: 50%;\r\n    opacity: 0.7;\r\n    &:active {\r\n        background-color: ${borderColor};\r\n    }\r\n`;\r\n\r\nconst OpacityContainer = styled.div`\r\n    opacity: ${p => p.opacity};\r\n`\r\n\r\nconst Container = styled.div`      \r\n\r\n    \r\n    color: ${theme};    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > * {\r\n        margin-bottom: 10px;\r\n    }    \r\n    & > *:last-child {\r\n        margin: 0;\r\n    }\r\n\r\n    //가격\r\n    & > *:nth-child(3){\r\n        font-size: 25px;\r\n        line-height: 40px;\r\n        margin-bottom: 0;        \r\n    }\r\n    //24시간 거래량\r\n    & > *:nth-child(4){\r\n        font-size: 15px;\r\n    }\r\n\r\n    //스피커 버튼 컨테이너\r\n    & > *:nth-child(5){\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n`\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: transparent;  \r\n    color: ${theme};  \r\n    font-size: 13px;\r\n    border: 0;//1px solid #818181;\r\n    margin-top: 5px;\r\n    // border-radius: 4px;\r\n    // padding: 10px;\r\n`\r\n\r\nconst StyledOption = styled.option`\r\n    background: black;\r\n`\r\n\r\nconst Button = styled.div`\r\n    // width: 100px;\r\n    // font-size: 14px;\r\n    // min-height: 30px;\r\n    // line-height: 30px;\r\n    // border-radius: 20px;\r\n    // border: 1px solid ${borderColor};    \r\n    cursor: pointer;        \r\n`\r\n\r\nconst SpeechWrap = styled.div`\r\n    visibility: hidden\r\n`;\r\n\r\n\r\n//등락 퍼센트\r\nfunction getRate(closing_price, opening_price) {\r\n    const __closing_price  = parseFloat(closing_price)\r\n    const __opening_price = parseFloat(opening_price)        \r\n    const __now_price = __closing_price - __opening_price\r\n    const __rate = (__now_price / __opening_price) * 100\r\n    return parseFloat(__rate.toFixed(2));\r\n}\r\n\r\n\r\nconst DELAY = 5000 //5초\r\nconst SPEAKER_INTERVAL = 10000 //10초\r\n\r\nfunction CoinPrice() {\r\n\r\n    const [coin, setCoin] = useState(coinList[0].value)\r\n    const [data, setData] = useState()\r\n    const [text, setText] = useState('')    \r\n    const [delay, setDelay] = useState(DELAY)    \r\n    const currencyRef = useRef()    \r\n    const [readmeOpen, setReadmeOpen] = useState(false)\r\n    \r\n    const [speaker, setSpeaker] = useState(false)//소리 키는지 여부\r\n    const [speakerInterval, setSpeakerInterval] = useState(null) //소리 인터벌\r\n\r\n    const [checked, setChecked] = useState(false)//퍼센트 발음 추가 여부\r\n\r\n    useEffect(() => {    \r\n        search(coin)\r\n    }, [])\r\n\r\n    //5초마다 시세만 조회하여 세팅\r\n    useInterval(() => {        \r\n        search(coin)     \r\n    }, delay)\r\n\r\n\r\n    //10초에 한번씩 이전 시세와 달라졌는지 비교 후 음성 텍스트 세팅\r\n    useInterval(() => {\r\n        checkAndSettingText()\r\n    }, speakerInterval) \r\n  \r\n    const checkAndSettingText = () => {\r\n        if(data) {            \r\n\r\n            //시세가 다르고, 스피커 온 일때만\r\n            if(data.closing_price != currencyRef.current && speaker) {\r\n\r\n                //현재 가격으로 동기화\r\n                currencyRef.current = data.closing_price\r\n\r\n                let newText = parseFloat(data.closing_price).toLocaleString('ko-KR') + '원 '\r\n\r\n                console.log('checked'+checked)\r\n\r\n                if(checked) {\r\n                    newText += data.rate > 0 ? '플러스' : ''\r\n                    newText += data.rate.toLocaleString() +'%'\r\n                }\r\n\r\n                setText(newText)                \r\n            }\r\n        }\r\n    }\r\n\r\n    const search = async (_coin) => {\r\n\r\n      const res = await axios.get(`https://api.bithumb.com/public/ticker/${_coin}_KRW` + '_' + new Date().getTime());\r\n              \r\n        const newData = res.data.data        \r\n        const rate = getRate(newData.closing_price, newData.opening_price)\r\n        setData({...newData, rate: rate})        \r\n       \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(text)            \r\n            \r\n            document.getElementsByClassName('rs-play')[0].click()\r\n\r\n            //현재 버그픽스를 고치기 위해 임시로 설정(위에 클릭을 하면 자동으로 최상단 엘리먼트의 onClick을 해버려서 display가 false임에도 true로 되어 버려서임)\r\n            if(!display) {\r\n                setDisplay(false)\r\n            }\r\n    }, [text])\r\n\r\n    const onSpeakerClick = e => {        \r\n        e.stopPropagation()\r\n        const newSpeaker = !speaker\r\n        setSpeaker(newSpeaker)     \r\n\r\n        if(newSpeaker) {            \r\n            setSpeakerInterval(SPEAKER_INTERVAL)\r\n            toast(\"음성을 설정했습니다.\")\r\n        }else{\r\n            setSpeakerInterval(null)\r\n            toast(\"음소거 처리 되었습니다.\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const onSelectChange = (e) => {\r\n        setCoin(e.target.value)            \r\n        search(e.target.value)\r\n    }\r\n\r\n    const [opacity, setOpacity] = useState(1)\r\n\r\n    const onOpacityChange = (value) => {\r\n        let newOpacity = opacity + value\r\n        if(newOpacity > 1){\r\n            newOpacity = 1\r\n        }\r\n        if(newOpacity < 0) {\r\n            newOpacity = 0\r\n        }\r\n        setOpacity(newOpacity)\r\n    }\r\n \r\n    //퍼센트까지 말하기\r\n    const handleChange = () => {\r\n        const newChecked = !checked\r\n        setChecked(newChecked);\r\n\r\n        if(newChecked)\r\n            toast(\"퍼센트까지 말하기로 설정\")\r\n        else\r\n            toast(\"퍼센트 말하기 취소\")\r\n            \r\n      };\r\n\r\n    const [display, setDisplay] = useState(true)\r\n\r\n    //디스플레이가 꺼져있을때만 켠다\r\n    const onBodyClick = e => {                \r\n        e.stopPropagation()\r\n\r\n        if(!display) {            \r\n            setDisplay(true)\r\n        }\r\n    }\r\n\r\n    const onOffClick = e => {\r\n        e.stopPropagation()\r\n        setDisplay(false)\r\n    }\r\n\r\n    const onOnClick = e => {       \r\n        e.stopPropagation()\r\n        setDisplay(true)\r\n    }\r\n\r\n    if(!data) return null\r\n  \r\n      const __rate = getRate()\r\n\r\n    return (\r\n\r\n        <>\r\n            {                \r\n                !display && (\r\n                    <div style={{position: 'fixed', top: 0, left: 0, bottom: 0, right: 0, color: 'red', background: 'black', zIndex: 99}} \r\n                        onClick={onOnClick}\r\n                    />\r\n                )\r\n            }\r\n            \r\n        <Wrapper className='css-selector' display={display} onClick={onBodyClick}>\r\n\r\n            \r\n            \r\n            <OpacityContainer opacity={opacity}>\r\n                <Container>                \r\n\r\n                    <BitcoinPrice />\r\n\r\n                    <StyledSelect onChange={onSelectChange}>\r\n                        {coinList.map(item => <StyledOption value={item.value}>{item.name}</StyledOption>)}\r\n                    </StyledSelect>\r\n                    <div>\r\n                        <b>{parseFloat(data.closing_price).toLocaleString('ko-KR')}원</b>\r\n                        <span style={{fontSize: 16, marginLeft: 10}}>\r\n                            {data.rate > 0 && '+'}{data.rate}%\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            parseFloat(data.acc_trade_value_24H) > 1000000 ? \r\n                            `${Math.round((parseFloat(data.acc_trade_value_24H) / 1000000), 0).toLocaleString('ko-KR')}백만` :                        \r\n                            Math.round((parseFloat(data.acc_trade_value_24H)), 0).toLocaleString('ko-KR')\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    <div>\r\n                        <Button onClick={onSpeakerClick}>\r\n                            {\r\n                                speaker ? <GiSpeaker size={30}/> : <GiSpeakerOff size={30} />                        \r\n                            }\r\n                        </Button>                \r\n                        <label style={{height: 30, marginLeft: 10}}>\r\n                            <input type=\"checkbox\" \r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                disabled={!speaker}\r\n                            />\r\n                            %\r\n                        </label>\r\n                    </div>\r\n                </Container>\r\n            </OpacityContainer>\r\n            \r\n            <ButtonGroup>\r\n                <SecretButton onClick={onOpacityChange.bind(this, -0.2)}>\r\n                    <BsMoon />\r\n                </SecretButton>\r\n                <SecretButton onClick={onOpacityChange.bind(this, 0.2)}>\r\n                    <BsBrightnessHigh />                    \r\n                </SecretButton>\r\n\r\n                <SecretButton onClick={onOffClick}>\r\n                    <AiOutlinePoweroff />\r\n                </SecretButton>\r\n\r\n            </ButtonGroup>\r\n\r\n            <OpacityContainer opacity={opacity}>\r\n                <div style={{color: theme}}>\r\n                    <div style={{marginTop: 16, textAlign:'center', fontSize: 12, fontWeight: 'lighter'}}>존버는 승리한다 - made by Jaden</div>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: 5, textAlign:'center', fontSize: 12}}>                        \r\n                        <div style={{marginRight: 16}}>\r\n                            <a style={{color: theme}} href=\"mailto:ksmark8543@naver.com\">Contact me</a>                            \r\n                        </div>\r\n                        <div style={{textAlign: 'center'}} onClick={() => setReadmeOpen(!readmeOpen)}>\r\n                            <u>How to use?</u>            \r\n                        </div>                        \r\n                    </div>                \r\n                </div>\r\n                {\r\n                    readmeOpen && <ReadMe />\r\n                }\r\n            </OpacityContainer>\r\n\r\n            <SpeechWrap >\r\n                <Speech        \r\n                    displayText={false}\r\n                    stop={true}\r\n                    pause={true}\r\n                    resume={true}\r\n                    // textAsButton={true}\r\n                    // voice='Daniel'\r\n                    // lang={'en'}\r\n                    text={text}\r\n                    lang={'ko-KR'}                    \r\n                />               \r\n            </SpeechWrap>\r\n\r\n            \r\n        </Wrapper>\r\n\r\n        \r\n\r\n        <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n  \r\nexport default CoinPrice","import {useEffect, useState} from 'react'\nimport CoinPrice from './components/coinPrice'\nimport css from './App.css'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div>\n        <CoinPrice />\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}