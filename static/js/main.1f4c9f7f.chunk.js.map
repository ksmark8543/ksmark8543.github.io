{"version":3,"sources":["components/hook/useInterval.js","components/coinPrice/index.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","coinList","value","name","theme","borderColor","Wrapper","styled","div","p","opacity","Fixed","SecretButton","Container","StyledSelect","select","Button","SpeechWrap","CoinPrice","useState","coin","setCoin","data","setData","setDelay","currencyRef","search","_coin","a","axios","get","Date","getTime","res","newData","console","log","closing_price","document","getElementsByTagName","click","setOpacity","onOpacityChange","newOpacity","onChange","e","target","map","item","parseFloat","toLocaleString","onClick","newDelay","size","style","marginTop","color","textAlign","fontSize","href","bind","this","displayText","stop","pause","resume","text","lang","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f4c9f7f.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      const tick = () => {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n  export default useInterval","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios, {cacheAdapterEnhancer} from 'axios'\r\nimport Speech from 'react-speech';\r\nimport styled from 'styled-components'\r\nimport useInterval from '../hook/useInterval'\r\nimport {\r\n    BsBrightnessHigh,\r\n    BsMoon,\r\n    BsFillPlayFill, BsFillStopFill} from 'react-icons/bs'\r\n\r\nconst coinList = [\r\n    {value: 'BTC', name: 'BTC 비트코인' },\r\n    {value: 'ETH', name: 'ETH 이더리움' },\r\n    {value: 'BLY', name: 'BLY 블로서리' },    \r\n    {value: 'XRP', name: 'XRP 리플' },\r\n    {value: 'EOS', name: 'EOS 이오스' },\r\n    {value: 'MANA', name: 'MANA 디센트럴랜드' },\r\n    {value: 'ADA', name: 'ADA 에이다' },\r\n    {value: 'RSR', name: 'RSR 리저브라이트' },\r\n    \r\n]\r\n\r\nconst theme = 'white'\r\nconst borderColor = '#505050'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;    \r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n\r\n    opacity: ${p => p.opacity};\r\n`\r\n\r\nconst Fixed = styled.div`\r\n    margin-top: 30px;\r\n    display: flex;    \r\n    opacity: 0.5;\r\n    color: white;\r\n`\r\n\r\nconst SecretButton = styled.div`\r\n    color: ${theme};\r\n    font-size: 25px;\r\n    // margin-left: 20px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.2s;\r\n    // border-radius: 50%;\r\n    &:active {\r\n        background-color: ${borderColor};\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`      \r\n\r\n    opacity: ${p => p.opacity};\r\n    color: ${theme};    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > * {\r\n        margin-bottom: 10px;\r\n    }    \r\n    & > *:last-child {\r\n        margin: 0;\r\n    }\r\n\r\n    //가격\r\n    & > *:nth-child(2){\r\n        font-size: 25px;\r\n        line-height: 40px;\r\n    }\r\n`\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: black;  \r\n    color: ${theme};  \r\n    font-size: 13px;\r\n    border: 0;\r\n    // padding: 8px;\r\n`\r\nconst Button = styled.div`\r\n    // width: 100px;\r\n    // font-size: 14px;\r\n    // min-height: 30px;\r\n    // line-height: 30px;\r\n    // border-radius: 20px;\r\n    // border: 1px solid ${borderColor};    \r\n    cursor: pointer;        \r\n`\r\n\r\nconst SpeechWrap = styled.div`\r\n    visibility: hidden\r\n`;\r\n\r\n\r\nconst DELAY = 10000 //10초\r\n\r\nfunction CoinPrice() {\r\n\r\n    const [coin, setCoin] = useState('BLY')\r\n    const [data, setData] = useState()\r\n    const [delay, setDelay] = useState(DELAY)\r\n    const currencyRef = useRef()\r\n\r\n    useEffect(() => {    \r\n        search(coin)\r\n    }, [])\r\n\r\n    useInterval(() => {        \r\n        search(coin)     \r\n    }, delay)\r\n  \r\n    const search = async (_coin) => {\r\n\r\n      const res = await axios.get(`https://api.bithumb.com/public/ticker/${_coin}_KRW` + '_' + new Date().getTime());\r\n              \r\n        const newData = res.data.data\r\n        \r\n        setData(newData)\r\n\r\n        // if(data){        \r\n        //     if(newData.closing_price !== data.closing_price) {\r\n        //         document.getElementsByTagName('button')[0].click()       \r\n        //     }\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('===='+currencyRef.current)\r\n        if(data) {\r\n            console.log(currencyRef.current)\r\n            if(data.closing_price !== currencyRef.current) {\r\n                currencyRef.current = data.closing_price\r\n                document.getElementsByTagName('button')[0].click()       \r\n            }\r\n        }\r\n    },[data])\r\n\r\n    const toggle = () => {        \r\n        const newDelay = delay ? null : DELAY\r\n        \r\n        //시작 하면 바로 한번 조회\r\n        if(newDelay) {\r\n            search(coin)\r\n        }\r\n        \r\n        //인터벌 시작 or 종료\r\n        setDelay(newDelay)              \r\n        \r\n    }\r\n\r\n    const onSelectChange = (e) => {\r\n        setCoin(e.target.value)    \r\n        \r\n        search(e.target.value)\r\n    }\r\n\r\n    const [opacity, setOpacity] = useState(1)\r\n\r\n    const onOpacityChange = (value) => {\r\n        let newOpacity = opacity + value\r\n        if(newOpacity > 1){\r\n            newOpacity = 1\r\n        }\r\n        if(newOpacity < 0) {\r\n            newOpacity = 0\r\n        }\r\n        setOpacity(newOpacity)\r\n    }\r\n\r\n    if(!data) return null\r\n  \r\n    return (\r\n\r\n        <>\r\n        \r\n        {/* <div style={{color: 'white'}}>\r\n        {opacity}\r\n        </div> */}\r\n        \r\n        \r\n        <Wrapper>\r\n            <Container opacity={opacity}>                \r\n\r\n                <StyledSelect onChange={onSelectChange}>\r\n                    {coinList.map(item => <option value={item.value}>{item.name}</option>)}\r\n                </StyledSelect>\r\n                <div>{parseFloat(data.closing_price).toLocaleString('ko-KR')}원</div>\r\n\r\n                \r\n                {/* {delay ? 'stop' : 'play'} */}\r\n                <Button onClick={toggle}>\r\n                {\r\n                    delay ? <BsFillStopFill size={30} /> : <BsFillPlayFill size={30}/>\r\n                }\r\n                </Button>                                \r\n\r\n                <div style={{marginTop: 16, color: theme, textAlign:'center', fontSize: 12}}>존버는 승리한다 - made by Jaden</div>\r\n                <div style={{marginTop: 5, textAlign:'center', fontSize: 12}}>\r\n                    <a style={{color: theme}} href=\"mailto:ksmark8543@naver.com\">contact me</a>\r\n                </div>\r\n\r\n            </Container>\r\n\r\n            \r\n            \r\n            <Fixed>\r\n                <SecretButton onClick={onOpacityChange.bind(this, -0.2)}>\r\n                    <BsMoon />\r\n                </SecretButton>\r\n                <SecretButton onClick={onOpacityChange.bind(this, 0.2)}>\r\n                    <BsBrightnessHigh />                    \r\n                </SecretButton>\r\n            </Fixed>\r\n\r\n\r\n\r\n            <SpeechWrap >\r\n                <Speech        \r\n                    displayText={false}\r\n                    stop={true}\r\n                    pause={true}\r\n                    resume={true}\r\n                    // textAsButton={true}\r\n                    // voice='Daniel'\r\n                    // lang={'en'}\r\n                    text={parseFloat(data.closing_price).toLocaleString('ko-KR')}     \r\n                    lang={'ko-KR'}                    \r\n                />\r\n            </SpeechWrap>\r\n        </Wrapper>\r\n\r\n        \r\n\r\n\r\n        \r\n        </>\r\n    );\r\n}\r\n  \r\nexport default CoinPrice","import {useEffect, useState} from 'react'\nimport CoinPrice from './components/coinPrice'\nimport css from './App.css'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div>\n        <CoinPrice />\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}